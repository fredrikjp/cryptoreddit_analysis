name: Run Kafka Stream Every Hour

on:
  schedule:
    - cron: '0 * * * *'  # Every hour at minute 0
  workflow_dispatch:     # Allow manual triggering
  push:               # Trigger on push events
    paths-ignore:
        - 'consumer/data/**'  # Avoid infinete loops when pushing consumer/data and triggering the workflow again
permissions:
  contents: write  # Required to push changes back to the repository

jobs:
  run-kafka-stream:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python and install dependencies
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # or whatever version you use

      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Docker Compose
        run: |
          docker compose up -d
          echo "Kafka + Zookeeper starting up..."
          sleep 30  # Give services time to initialize

      - name: Run Producer (Reddit Stream)
        run: |
          echo "Starting producer..."
          timeout 120 python producer/reddit_stream_producer.py
        continue-on-error: true

      - name: Run Consumer (Sentiment Consumer)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Starting consumer..."
          timeout 120 python consumer/sentiment_consumer.py
        continue-on-error: true

      - name: Set up Git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push data
        run: |
          git add consumer/data/*.json
          git commit -m "Data from GitHub Actions cron job" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push

      - name: Shut down Docker Compose
        run: docker compose down

      
